services:

  db:
    image: postgres:14
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=gutendex
      - POSTGRES_DB=gutendex
    networks:
      - backend
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U gutendex -d gutendex" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./project/
      dockerfile: Dockerfile
    env_file:
      - ./project/gutendex/.env
    volumes:
      - static-content:/var/www/gutendex/static-root
    networks:
      - backend
      - frontend
    depends_on:
      db:
        condition: service_healthy
    
  nginx:
    image: nginx:1.22-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./project/static:/static/static-content
      - ./project/gutendex:/static/html
    networks:
      - frontend
    depends_on:
      - app
      - db

volumes:
  db-data:
  static-content:

networks:
  frontend:
  backend: